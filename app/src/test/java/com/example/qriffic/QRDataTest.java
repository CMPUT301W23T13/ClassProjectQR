package com.example.qriffic;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

import org.junit.jupiter.api.Test;

import java.util.HashMap;

public class QRDataTest {
    private QRCode mockQRCode() {
        return new QRCode("abcdef", new GeoLocation(11.11, 22.22, "Edmonton"), "username", null, "a comment");
    }

    private PlayerProfile mockPlayerProfile() {
        QRCode mockQR = mockQRCode();
        return new PlayerProfile("username", "uuid", "username@outlook.com", "999.999.9999",  new HashMap<String, QRCode>(){{put(mockQR.getIdHash(), mockQR);}});
    }

    private QRData mockQRData() {
        QRCode mockQR = mockQRCode();
        return new QRData(mockQR.getIdHash(), mockQR.getScore(), mockQR.getName());
    }

    @Test
    void testGetters() {
        QRCode mockQR = mockQRCode();

        assertEquals(53.1234, mockQR.getGeoLocation().getLongitude());
        assertNotEquals(12.3456, mockQR.getGeoLocation().getLongitude());

        assertEquals(12.5623, mockQR.getGeoLocation().getLatitude());
        assertNotEquals(12.3456, mockQR.getGeoLocation().getLatitude());

        assertEquals("Edmonton", mockQR.getGeoLocation().getCity());
        assertNotEquals("Calgary", mockQR.getGeoLocation().getCity());

        assertEquals(16088668, mockQR.getScore());
        assertNotEquals(16000000, mockQR.getScore());

        assertEquals("Ash", mockQR.getUsername());
        assertNotEquals("Ash Ketchum", mockQR.getUsername());

        // SHA256 output generated by https://emn178.github.io/online-tools/sha256.html
        assertEquals("c914133b717c126ecafc5b9b8bd529bcad06d064edc073906a6b83b58bf57e5c",
                mockQR.getIdHash());
        assertNotEquals("c914133b717c126ecafc5b9b8bd529bcad06d064edc073906a6b83b58bf57a5c",
                mockQR.getIdHash());

        assertEquals("Grand Purple Garrett's Miteergur", mockQR.getName());
        assertNotEquals("NAMED MONSTER", mockQR.getName());
    }
}
